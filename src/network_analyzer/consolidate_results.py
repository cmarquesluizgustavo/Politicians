import os
import pandas as pd


def consolidate_files_4_algorithm(
    path: str, similarity_algorithm: str, target_features: list
):
    network_features_files = os.listdir(
        f"{path}/features/{similarity_algorithm}/network"
    )

    node_features_files = os.listdir(f"{path}/features/{similarity_algorithm}/nodes")

    nodes_df = pd.concat(
        [
            pd.read_csv(f"{path}/features/{similarity_algorithm}/nodes/{node_file}")
            for node_file in node_features_files
            if node_file.endswith(".csv")
        ],
    )

    nodes_df = nodes_df.sort_values(by=["period"]).set_index("period")
    nodes_df.to_csv(f"{path}/features/{similarity_algorithm}/nodes.csv")

    for feature in target_features:
        feature_periods = pd.concat(
            [
                pd.read_csv(
                    f"{path}/features/{similarity_algorithm}/network/{network_feature_file}"
                )
                for network_feature_file in network_features_files
                if feature in network_feature_file
                and network_feature_file.endswith(".csv")
            ],
        )
        # Remove columns with all NaNs
        feature_periods = feature_periods.drop(columns=["Unnamed: 0"], errors="ignore")
        feature_periods = feature_periods.loc[:, feature_periods.notna().any()]
        feature_periods.to_csv(f"{path}/features/{similarity_algorithm}/{feature}.csv")


def consolidate_files(path: str, similarity_algorithms: list, target_features: list):
    """
    This function gathers all the csv files generated by the runs
    and consolidates them into a few csv files that contain the data.
    """

    networks_files = os.listdir(f"{path}/networks")
    nodes_files = os.listdir(f"{path}/nodes")
    networks_df = pd.concat(
        [
            pd.read_csv(f"{path}/networks/{network_file}")
            for network_file in networks_files
        ],
    )
    nodes_df = pd.concat(
        [pd.read_csv(f"{path}/nodes/{node_file}") for node_file in nodes_files],
    )

    nodes_df = nodes_df[nodes_df["neighbors"] != 0]

    networks_df = networks_df.sort_values(by=["period"])
    nodes_df = nodes_df.sort_values(by=["node_id", "period"])

    networks_df.to_csv(f"{path}/networks/networks.csv", index=False)
    nodes_df.to_csv(f"{path}/nodes/nodes.csv", index=False)

    for similarity_algorithm in similarity_algorithms:
        consolidate_files_4_algorithm(path, similarity_algorithm, target_features)
